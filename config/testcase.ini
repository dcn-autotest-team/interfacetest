[SETTINGS]
# 接口访问url
base_url = http://192.168.0.1:8080/api/v1

# 连接数据库配置
config =
        user: dscc
        password: dscc
        host: 192.168.0.1
        port: 3306
        database: dscc

# 设置数据库中表的autoincrement值
autoincrement = 6

#   普通用户账号
username1 = aaaa1
password1 = 55555555
username2 = aaaa2
password2 = 55555555
username3 = aaaa3
password3 = 55555555

# 普通管理员账号
username4 = bbbb
password4 = 55555555

# 导出文件的匹配规则
#
exports =
            .+user/export1: users_export_4.1.csv
            .+user/export2: users_export_4.2.csv
            .+org/export: orginfoexport.csv
            .+type=1: apexport.csv
            .+type=0: acexport.csv
            .+history/export: userlogexport.csv
            .+devicelog/export: devlogexport.csv
            .+backup\Z: backuptoclient.tar.gz
            .+backupExport?id=: backuptoserver.tar.gz


# 导入文件的匹配规则
imports =
            .+init/batchImport1\Z: users_import_3.1.csv
            .+init/batchImport2: users_import_3.2.csv
            .+init/batchImport3: users_import_3.3.csv
            .+init/batchImport4: users_import_3.4.csv
            .+init/batchImport5: users_import_3.5.csv
            .+init/batchImport6: users_import_3.6.csv
            .+init/batchImport7: users_import_3.7.csv
            .+init/batchImport8: users_import_3.8.csv
            .+init/batchImport9: users_import_3.9.csv
            .+init/batchImport10: users_import_3.10.csv
            .+init/batchImport11: users_import_3.11.csv
            .+init/batchImport12: users_import_3.12.csv
            .+init/batchImport13: users_import_3.13.csv
            .+init/batchImport14: users_import_3.14.csv
            .+init/batchImport15: users_import_3.15.csv
            .+init/batchImport16: users_import_3.16.csv
            .+init/batchImport17: users_import_3.17.csv
            .+org/batchImport1\Z: org_import_3.1.csv
            .+org/batchImport2: org_import_3.2.csv
            .+org/batchImport3: org_import_3.3.csv
            .+org/batchImport4: org_import_3.4.csv
            .+org/batchImport5: org_import_3.5.csv
            .+org/batchImport6: org_import_3.6.csv
            .+org/batchImport7: org_import_3.7.csv
            .+org/batchImport8: org_import_3.8.csv
            .+org/batchImport9: org_import_3.9.csv
            .+org/batchImport10: org_import_3.10.csv
            .+org/batchImport11: org_import_3.11.csv
            .+org/batchImport12: org_import_3.12.csv
            .+org/batchImport13: org_import_3.13.csv
            .+org/batchImport14: org_import_3.14.csv
            .+org/batchImport: orginfoimport.csv
            .+addLicense: addlicense.lic
            .+ap/batchImport: apimport.csv
            .+upgrade/uploadTar: ap.tar
            .+upgrade/system: system.tar.gz
            .+restore/Z: systemrestore.zip


[MAPPING]

# project initial and uninitiated
test_000_initial_test_initial = 项目初始化
#test_999_uninitiated_test_uninitiated = 项目环境恢复

# test_001_user.py
test_001_user_setUpClass = user初始化
test_001_user_tearDownClass = user环境恢复
test_001_user_test_user_unit_out = 用户单位调出
test_001_user_test_public_user_out = 迁出公共组用户
test_001_user_test_user_account_import = 用户账号批量导入
test_001_user_test_user_account_export = 用户账号批量导出
test_001_user_test_user_login = 用户登入操作
test_001_user_test_user_login_out = 用户登出操作
test_001_user_test_create_user = 创建新用户
test_001_user_test_update_user = 更新单个用户
test_001_user_test_delete_user = 删除单个用户
test_001_user_test_query_user = 查询指定单个用户
test_001_user_test_user_info = 按条件分页获取机构下的用户信息
test_001_user_test_batch_update_user = 批量更新用户
test_001_user_test_batch_delete_user = 批量删除用户
test_001_user_test_login_user_interface = 获取当前登录用户登录方式接口
test_001_user_test_modify_password = 密码修改接口
test_001_user_test_group_info = 获取机构下的分组信息
test_001_user_test_create_org_group = 创建单个组织机构分组
test_001_user_test_update_group = 更新单个分组
test_001_user_test_delete_group = 删除单个分组
test_001_user_test_batch_delete_user_group = 批量删除用户组
test_001_user_test_batch_org_user = 组织机构用户组批量操作
test_001_user_test_user_group_info = 按条件分页获取用户组下的用户信息

# test_002_org.py
test_002_org_setUpClass = org初始化
test_002_org_tearDownClass = org环境恢复
test_002_org_test_org_tree = 当前登录用户组织机构展示树
test_002_org_test_update_parent = 拖拽变更组织机构父节点
test_002_org_test_org_import = 组织机构批量导入
test_002_org_test_org_export = 组织机构批量导出
test_002_org_test_org_page = 组织机构信息分页显示
test_002_org_test_query_org = 查询指定单个组织机构信息
test_002_org_test_create_org = 创建单个组织机构
test_002_org_test_org_update = 更新单个组织机构
test_002_org_test_org_info = 组织机构信息列表
test_002_org_test_org_name = 组织机构根据机构名称查询
test_002_org_test_delete_org = 删除单个组织机构
test_002_org_test_batch_delete_org = 批量删除组织机构

# test_003_admin.py
test_003_admin_setUpClass = admin初始化
test_003_admin_tearDownClass = admin环境恢复
test_003_admin_setUp =
test_003_admin_tearDown =
test_003_admin_test_admin_info = 按条件分页获取机构下的管理员信息
test_003_admin_test_admin_model = 获取校管理员功能权限模版
test_003_admin_test_sys_admin_model = 获取局管理员功能权限模版
test_003_admin_test_admin_id = 根据ID查询单个管理员信息
test_003_admin_test_admin_assign = 修改单个管理员的功能权限和区域权限
test_003_admin_test_admins_assign = 新增多个管理员的功能权限和区域权限
test_003_admin_test_del_admins = 批量删除管理员权限恢复为普通用户
test_003_admin_test_search_by_phone = 根据手机号码获取管理范围内的用户信息

# test_004_service.py
test_change_user_info = 个人信息及密码修改接口
test_login_status = 获取当前登录用户登录方式接口
test_change_password = 密码修改接口

# test_005_sysinitial.py
test_check_initial = 检查系统是否已经被初始化
test_init_org_net = 初始化设置根节点名称和网络参数
test_get_guide = 获取用户是否隐藏使用向导接口
test_set_guide = 设置用户是否隐藏使用向导接口

# test_006_sysset.py
test_cpu_status = 获取系统CPU内存硬盘状态
test_get_sys_info = 获取系统基础信息
test_set_sys_info = 设置系统基础信息
test_get_configs = 获取所有配置项信息
test_get_config = 获取单个配置项信息
test_update_config = 更新配置
test_ping = PING功能
test_get_license = 获取License信息
test_add_license = 上传新license文件
test_reboot_system = 重启系统
test_init = 恢复出厂
test_get_sys_time = 获取系统当前时间
test_set_time = 手动设置系统时间
test_get_version = 获取系统版本号
test_add_vendor = 上传vendor文件
test_sms_config = 短信参数配置
test_upgrade = 系统升级
test_backup_to_client = 系统手动备份文件下载到客户端
test_backup_to_server = 系统手动备份文件保存到服务器
test_backup = 系统定期备份
test_backup_param = 获取系统定期备份参数
test_backup_list = 获取服务器上备份文件列表
test_backup_export = 导出服务器上备份文件
test_backup_del = 删除服务器上备份文件
test_restore1 = 系统手动还原上传备份文件
test_restore2 = 系统手动还原选择备份列表中的文件
test_network_param = 获取网管平台IP和port
test_get_network_param = 设置网管平台IP和port

# test_007_device.py
test_create_ap = 新建AP
test_ap_info = 按条件分页获取AP设备信息
test_query_ap = 根据ID查询单个AP
test_count = 统计在线已分配AP数量和统计未分配在线AP数量
test_online_ap = 未分配在线AP列表
test_online_user = AP下在线终端设备列表
test_delete_ap = 删除单个AP
test_batch_delete_ap = 批量删除AP
test_modify_ap = 修改单个AP
test_batch_modify_ap = 批量修改
test_batch_import = 导入
test_reboot = 重启
test_dev_export = 设备列表批量导出
test_ac_info = AC信息分页显示
test_get_ac_info = 获取单个AC信息
test_create_ac = 新增AC设备
test_update_ac = 更新单个AC
test_delete_ac = 删除单个AC
test_batch_delete_ac = 批量删除AC

# test_008_template.py
test_template = Portal模板配制分页显示
test_get_templates = 获取全部模板信息
test_get_template = 获取单个模板信息
test_add_thumb = 生成缩略图
test_add_template = 新增模板
test_update_template = 更新模板
test_delete_template = 删除单个Portal模板
test_batch_delete_portal_template = 批量删除Portal模板
test_show_pic = 显示Portal图片地址

# test_009_wireless.py
test_create_network = 创建新无线网络
test_update_network = 更新无线网络
test_delete_network = 删除无线网络
test_config_network = 给机构和分组分配无线网络
test_get_networks = 无线网络信息分页获取
test_get_network = 单个无线网络信息获取
test_query_network = 查询权限内用户组下各无线网络信息分页获取
test_query_map = 查询某无线网络与某用户组映射信息

# test_010_auth.py
test_sms = 请求手机校验码
test_auth = 用户认证上线
test_un_auth = 用户认证下线
test_visitor_auth = 访客短信认证上线
test_qr_code = 用户扫描访客二维码
test_qr_code_auth = 访客二维码授权认证上线
test_get_page_at_groups_within_permissions = 查询权限内用户组下各无线网络信息分页获取
test_query_network_group_mapping = 查询某无线网络与某用户组映射信息

# test_011_desktop.py
test_upload_desktop_img = 上传桌面图片
test_get_desktop_img = 获取桌面图片
test_delete_desktop_img = 删除桌面图片
test_get_interfaces_with_current_user = 获取当前用户能够使用的所有应用接口
test_get_apps = 获取当前已添加到桌面的所有应用接口
test_add_app = 添加应用快捷方式到桌面接口
test_get_to_desktop = 从桌面删除应用快捷方式接口

# test_012_meeting.py
test_create_meeting = 新增会议二维码
test_get_meetings = 会议二维码分页获取
test_get_meeting = 获取单个会议二维码信息
test_modify_meeting = 会议二维码编辑
test_delete_meeting = 会议二维码删除
test_batch_delete = 批量删除
test_get_ssid = 获取当前用户所在组织机构可用所有SSID

# test_013_log.py
test_get_syslog = 系统日志分页获取
test_get_user_log = 用户日志分页获取
test_log_export = 用户日志批量导出
test_batch_delete_log = 批量删除用户日志
test_delete_log = 条件删除用户日志
test_get_dev_log = 设备日志分页获取
test_dev_log_export = 设备日志批量导出
test_batch_delete_dev_log = 批量删除设备日志
test_delete_dev_log = 条件删除设备日志

# test_014_status.py
test_get_client = 在线终端分页获取
test_delete_client = 批量删除在线终端
test_net_log = 对外NetLog
test_client_info = 获取用户在线状态

# test_015_statistics.py
test_device_for_pie = 无线设备数量和状态饼图统计
test_ap_by_org = 按单位统计AP设备数量
test_user_by_org = 按单位统计网络使用情况
test_stat_for_map = 按地图展示统计设备和用户
test_user_tendency = 在线终端数趋势图
test_channel_tendency = 终端频段趋势图
test_sta_info = 按类型统计终端数量

# test_016_network.py
test_net_login = 单点登录

# test_017_fileupdate.py
test_upload_file = 上传升级文件
test_delete_file = 删除AP升级文件
test_file_list = 升级文件列表
test_update_file = 更新升级版本

# test_018_apupgrade.py
test_box = 升级型号下拉框
test_create_upgrade_task = 创建升级任务
test_upgrade_log = 升级操作日志接口