[DEFAULT]

[REPORT]
# 报告默认parent路径
report_dir_path = ../testreport
# 报告名称
report_name = report.html
# 是否修改默认报告名称
# report_modify = False ---> report_file = ../testreport/report.html
# report_modify = True ---> report_file = 动态扫描到的testreport目录/日期（2018081231）/report.html
report_file_modify = True
# 报告文件全路径
report_file = ${report_dir_path}${report_name}


[LOGGING]
# 日志文件默认parent路径
log_dir_path = ../logs
# 日志名称
log_name = console.log
# 日志文件全路径
log_file = ${log_dir_path}${log_name}
# 日志文件格式
# 如果为空，会有默认的fmt为'[%(levelname)1.1s %(asctime)s] %(color)s%(message)s%(end_color)s'
# 如果要自定义日志格式参照 https://docs.python.org/3/library/stdtypes.html#old-string-formatting
# 如果要进行颜色显示 使用如下格式%(color)s+需要进行颜色显示的部分+%(end_color)s
;log_fmt = %(color)s[%(levelname)1.1s %(asctime)s]%(end_color)s %(message)s
;log_fmt = [%(name)s]%(message)s
log_fmt = %(color)s%(levelname)-4s|%(end_color)s%(message)s
;log_fmt = %(asctime)s - %(name)s - %(levelname)s - %(message)s
;log_fmt = %(levelname)+4s%(color)s%(message)s%(end_color)s


# 是否修改默认报告名称
# log_file_modify = False ---> log_file = ../logs/console.log
# log_file_modify = True ---> log_file=report_file.replace(${report_name}, ${log_name})也就是跟report在同一目录
log_file_modify = True
# 日志的logger名称
logger_name = console logger

# console_log_on/logfile_log_on  = True 开启控制台/文件日志，False则关闭
console_log_on = True
file_log_on = True

# 日志级别：CRITICAL = 50 ERROR = 40 WARNING = 30 INFO = 20 DEBUG = 10 NOTSET = 0
# 如果console和file同时打开，默认日志的level为logfile的level为min(log_level_in_console, log_level_in_logfile)
# 通过log_level_in_console和log_level_in_logfile过滤输出到console和file的内容
log_level_in_console = 20
log_level_in_logfile = 10


# 控制文件单个文件大小
max_bytes_each = 5120000
# 控制超过上限之后进行分割文件最大数目
backup_count = 10


[SMTP]
# 邮件服务器配置
login_user = ys@dcyunke.com
login_password = dcn_123
from_address = dcn@digitalchina.com
to_address = [dcn_test@digitalchina.com, yanwh@digitalchina.com]
host = 192.168.60.99
port = 8080
encrypt = True

[UNITTEST]
# 需要执行测试用例，目前支持{Tag.SP，Tag.FULL, Tag.SMOKE}
RUN_CASE = {Tag.FULL}
# 开启用例排序
SORT_CASE = True
# 每个用例的执行间隔，单位是秒
EXECUTE_INTERVAL = 0
# 开启检测用例描述
CHECK_CASE_DOC = False
# 显示完整用例名字（函数名字+参数信息）
FULL_CASE_NAME = True
# 测试报告显示的用例名字最大程度
MAX_CASE_NAME_LEN = 99
# 执行用例的时候，显示报错信息
SHOW_ERROR_TRACEBACK = False
# 生成ztest风格的报告
CREATE_ZTEST_STYLE_REPORT = True
# 生成bstest风格的报告
CREATE_BSTEST_STYLE_REPORT = True




